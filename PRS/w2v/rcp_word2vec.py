# -*- coding: utf-8 -*-
"""RCP_word2vec.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vJCQrMJw8GpypWDOklc3Lj6z30KDm8v5
"""

import urllib.request
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import re
import requests
from gensim.models import Word2Vec
from gensim.models import KeyedVectors
from sklearn.metrics.pairwise import cosine_similarity

df = pd.read_csv('recipe.csv')

def arrToStr(arr):
  return arr.str.replace("[^ㄱ-ㅎㅏ-ㅣ가-힣 ]","")

df['cleand'] = arrToStr(df['ingre_list']) + arrToStr(df['tag'])
df['cleand'].replace('', np.nan, inplace=True)
df = df[df['cleand'].notna()]
corpus = []
for w in df['cleand']:
  corpus.append(w.split())

urllib.request.urlretrieve("https://s3.amazonaws.com/dl4j-distribution/GoogleNews-vectors-negative300.bin.gz",filename="GoogleNews-vectors-negative300.bin.gz")

word2vec_model = Word2Vec(size=300, window=5, min_count=2, workers=-1)
word2vec_model.build_vocab(corpus)
#word2vec_model.intersect_word2vec_format('GoogleNews-vectors-negative300.bin.gz', lockf=1.0, binary=True)
word2vec_model.train(corpus, total_examples = word2vec_model.corpus_count, epochs=15)

word2vec_model.save('w2v.model')